From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: CursedFlames <18627001+CursedFlames@users.noreply.github.com>
Date: Sun, 17 Apr 2022 23:52:35 +1200
Subject: [PATCH] fix minor type discrepancies


diff --git a/fabric-object-builder-api-v1/src/main/java/net/fabricmc/fabric/mixin/object/builder/ModelPredicateProviderRegistryAccessor.java b/fabric-object-builder-api-v1/src/main/java/net/fabricmc/fabric/mixin/object/builder/ModelPredicateProviderRegistryAccessor.java
index 9a695d167d75658918e6b1fcaab1a063c2c0601d..b2544b0fd84f7c9319eeae978fa01a5889bf0ddd 100644
--- a/fabric-object-builder-api-v1/src/main/java/net/fabricmc/fabric/mixin/object/builder/ModelPredicateProviderRegistryAccessor.java
+++ b/fabric-object-builder-api-v1/src/main/java/net/fabricmc/fabric/mixin/object/builder/ModelPredicateProviderRegistryAccessor.java
@@ -16,17 +16,18 @@
 
 package net.fabricmc.fabric.mixin.object.builder;
 
+import net.minecraft.client.item.ModelPredicateProvider;
+
 import org.spongepowered.asm.mixin.Mixin;
 import org.spongepowered.asm.mixin.gen.Invoker;
 
-import net.minecraft.client.item.UnclampedModelPredicateProvider;
 import net.minecraft.client.item.ModelPredicateProviderRegistry;
 import net.minecraft.util.Identifier;
 
 @Mixin(ModelPredicateProviderRegistry.class)
 public interface ModelPredicateProviderRegistryAccessor {
-	@Invoker
-	static UnclampedModelPredicateProvider callRegister(Identifier id, UnclampedModelPredicateProvider provider) {
+	@Invoker(value = "registerGeneric")
+	static ModelPredicateProvider callRegister(Identifier id, ModelPredicateProvider provider) {
 		throw new AssertionError("mixin dummy");
 	}
 }
diff --git a/fabric-object-builder-api-v1/src/main/java/net/fabricmc/fabric/mixin/object/builder/ModelPredicateProviderRegistrySpecificAccessor.java b/fabric-object-builder-api-v1/src/main/java/net/fabricmc/fabric/mixin/object/builder/ModelPredicateProviderRegistrySpecificAccessor.java
index fbe6cd082704a716adb3c4901fc79dab1092d94f..05f977a8fd9ecdd5ec1d643d6fccd1a9271ace4c 100644
--- a/fabric-object-builder-api-v1/src/main/java/net/fabricmc/fabric/mixin/object/builder/ModelPredicateProviderRegistrySpecificAccessor.java
+++ b/fabric-object-builder-api-v1/src/main/java/net/fabricmc/fabric/mixin/object/builder/ModelPredicateProviderRegistrySpecificAccessor.java
@@ -16,10 +16,11 @@
 
 package net.fabricmc.fabric.mixin.object.builder;
 
+import net.minecraft.client.item.ModelPredicateProvider;
+
 import org.spongepowered.asm.mixin.Mixin;
 import org.spongepowered.asm.mixin.gen.Invoker;
 
-import net.minecraft.client.item.UnclampedModelPredicateProvider;
 import net.minecraft.client.item.ModelPredicateProviderRegistry;
 import net.minecraft.item.Item;
 import net.minecraft.util.Identifier;
@@ -28,7 +29,7 @@ import net.minecraft.util.Identifier;
 @Mixin(ModelPredicateProviderRegistry.class)
 public interface ModelPredicateProviderRegistrySpecificAccessor {
 	@Invoker
-	static void callRegister(Item item, Identifier id, UnclampedModelPredicateProvider provider) {
+	static void callRegister(Item item, Identifier id, ModelPredicateProvider provider) {
 		throw new AssertionError("mixin dummy");
 	}
 }
diff --git a/fabric-particles-v1/src/main/java/net/fabricmc/fabric/impl/client/particle/ParticleFactoryRegistryImpl.java b/fabric-particles-v1/src/main/java/net/fabricmc/fabric/impl/client/particle/ParticleFactoryRegistryImpl.java
index a26a6792c8e1b4557637c1067293f0dad6b47fe5..a6a2ba151bdcfb02a0315a108ff2c1ea4bfc7a34 100644
--- a/fabric-particles-v1/src/main/java/net/fabricmc/fabric/impl/client/particle/ParticleFactoryRegistryImpl.java
+++ b/fabric-particles-v1/src/main/java/net/fabricmc/fabric/impl/client/particle/ParticleFactoryRegistryImpl.java
@@ -72,7 +72,7 @@ public final class ParticleFactoryRegistryImpl implements ParticleFactoryRegistr
 
 		@Override
 		public <T extends ParticleEffect> void register(ParticleType<T> type, ParticleFactory<T> factory) {
-			((ParticleManagerAccessor) particleManager).getFactories().put(Registry.PARTICLE_TYPE.getRawId(type), factory);
+			((ParticleManagerAccessor) particleManager).getFactories().put(Registry.PARTICLE_TYPE.getId(type), factory);
 		}
 
 		@Override
diff --git a/fabric-particles-v1/src/main/java/net/fabricmc/fabric/mixin/client/particle/ParticleManagerAccessor.java b/fabric-particles-v1/src/main/java/net/fabricmc/fabric/mixin/client/particle/ParticleManagerAccessor.java
index 0136b2a60602e0957ed682ad799d3f4560212c05..1089292452b289c80c410f582fb8821e9f25a438 100644
--- a/fabric-particles-v1/src/main/java/net/fabricmc/fabric/mixin/client/particle/ParticleManagerAccessor.java
+++ b/fabric-particles-v1/src/main/java/net/fabricmc/fabric/mixin/client/particle/ParticleManagerAccessor.java
@@ -35,8 +35,8 @@ public interface ParticleManagerAccessor {
 	@Accessor("particleAtlasTexture")
 	SpriteAtlasTexture getParticleAtlasTexture();
 
-	@Accessor("factories")
-	Int2ObjectMap<ParticleFactory<?>> getFactories();
+	@Accessor("f_107293_")
+	Map<Identifier, ParticleFactory<?>> getFactories();
 
 	// NOTE: The field signature is actually Map<Identifier, SimpleSpriteProvider>
 	// This still works due to type erasure
diff --git a/fabric-resource-loader-v0/src/main/java/net/fabricmc/fabric/impl/resource/loader/ModResourcePackCreator.java b/fabric-resource-loader-v0/src/main/java/net/fabricmc/fabric/impl/resource/loader/ModResourcePackCreator.java
index 9edb243f7b74279fdeb40abf1b9f048cc4773f17..92fe75cbbcef19259f48eb5155a8db3c0233f44f 100644
--- a/fabric-resource-loader-v0/src/main/java/net/fabricmc/fabric/impl/resource/loader/ModResourcePackCreator.java
+++ b/fabric-resource-loader-v0/src/main/java/net/fabricmc/fabric/impl/resource/loader/ModResourcePackCreator.java
@@ -39,8 +39,8 @@ public class ModResourcePackCreator implements ResourcePackProvider {
 
 	public ModResourcePackCreator(ResourceType type) {
 		this.type = type;
-		this.factory = (name, text, bl, supplier, metadata, initialPosition, source) ->
-				new ResourcePackProfile(name, text, bl, supplier, metadata, type, initialPosition, source);
+		this.factory = (name, text, bl, supplier, metadata, initialPosition, source, bl2) ->
+				new ResourcePackProfile(name, text, bl, supplier, metadata, type, initialPosition, source, bl2);
 	}
 
 	/**
